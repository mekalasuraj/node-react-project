{"version":3,"sources":["actions/products.js","components/productItem.js","components/cartComponent.js","components/Landing.js"],"names":["getProducts","dispatch","a","axios","get","res","type","GET_PRODUCTS","payload","data","console","log","addToCart","items","product","cartItems","slice","productAlreadyInCart","forEach","cp","id","count","push","ADD_TO_CART","addTotalCost","num","TOTAL_COST","getProduct","GET_PRODUCT","ProductItem","props","productLists","map","item","i","className","style","height","width","src","image","alt","to","title","substr","price","onClick","e","onProductCLick","CartComponent","position","cartList","borderBottom","marginBottom","cartTotalCost","connect","state","productReducer","Math","round","totalCost","useEffect","length"],"mappings":"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","file":"static/js/4.aa74990a.chunk.js","sourcesContent":["import axios from 'axios';\n\nimport {GET_PRODUCTS,ADD_TO_CART,TOTAL_COST,GET_PRODUCT} from './types';\n\nexport const getProducts= () => async dispatch => {\n   \n    try {\n      const res = await axios.get('https://fakestoreapi.com/products');\n      dispatch({\n        type: GET_PRODUCTS,\n        payload: res.data\n      });\n    } catch (err) {\n    //   dispatch({\n    //     type: POST_ERROR,\n    //     payload: { msg: err.response.statusText, status: err.response.status }\n    //   });\n    console.log(err);\n    }\n  };\n\n\n  export const addToCart = (items, product) => (dispatch) => {\n\n    const cartItems = items.slice();\n    let productAlreadyInCart = false;\n  \n    cartItems.forEach((cp) => {\n      if (cp.id === product.id) {\n        \n        cp.count += 1;\n        productAlreadyInCart = true;\n      }\n    });\n  \n    if (!productAlreadyInCart) {\n      \n      cartItems.push({ ...product, count: 1 });\n      //cartItems.push(product);\n    }\n\n    //localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n    dispatch({ type: ADD_TO_CART, payload: { cartItems } });\n  };\n\n\n  export const addTotalCost = (num) => (dispatch) => {\n    //localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n    dispatch({ type: TOTAL_COST, payload:num });\n  };\n\n  export const getProduct= (id) => async dispatch => {\n   \n    try {\n      const res = await axios.get(`https://fakestoreapi.com/products/${id}`);\n      console.log(res.data);\n      dispatch({\n        type: GET_PRODUCT,\n        payload: res.data\n      });\n    } catch (err) {\n    \n    console.log(err);\n    }\n  };","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst ProductItem = (props) => {\n  \n  return (\n    <>\n    {\n          props.productLists.map((item,i)=>(\n            <div className=\"col-3 mt-3\" key={i}>\n           <div className=\"card\" >\n             <div style={{height: 194,width: '100%'}}>\n  <img\n    src={item.image}\n    className=\"card-img-top\"\n    alt=\"...\"\n    style={{height:'100%'}}\n  />\n  </div>\n  <div className=\"card-body\">\n    {/* <h5 className=\"card-title\">{item.title.substr(0, 14)}</h5> */}\n    <Link className=\"card-title\" to={`/product/${item.id}`}>\n        {/* {item.title.substr(0, 14)} */}\n        <h5 className=\"card-title\">{item.title.substr(0, 14)}</h5>\n    </Link>\n    <p className=\"card-text\">\n      Rs {item.price}\n    </p>\n    \n    <p className=\"card-text\">\n      Some quick example text to build on the card title and make up the bulk of the\n      card's content.\n    </p>\n  <button  className=\"btn btn-primary\"  onClick={(e) => props.onProductCLick(props.cartItems, item)}>Add</button>\n  </div>\n</div>\n</div>\n          ))\n      } \n    </>\n  );\n};\n\nexport default ProductItem;\n\n","import React from 'react';\n\n\nconst CartComponent = (props) => {\n  \n  return (\n    <>\n        <div style={{position:'fixed'}}>\n            {\n              props.cartList.map((item,i)=>(\n               <div key={i} style={{borderBottom: '1px solid #000',marginBottom:20}}>\n               <p>{item.title}</p>\n               <div className=\"row\">\n                 <div className=\"col-6\">\n                    <p>Qty:{item.count}</p>\n                 </div>\n                 <div className=\"col-6\">\n                    <p>Rs {item.price}</p>\n                 </div>\n               </div>\n               \n               \n             </div>\n              ))\n            }\n            <h4>Total:Rs {props.cartTotalCost}</h4>\n            </div>\n    </>\n  );\n};\n\nexport default CartComponent;\n\n","import React, { useEffect } from 'react';\nimport {getProducts,addToCart,addTotalCost} from '../actions/products';\nimport { connect } from 'react-redux';\nimport ProductItem from './productItem';\nimport CartComponent from './cartComponent';\n\nconst LandingPage = (props) => {\n  \nuseEffect(()=>{\n  props.getProducts();\n},[])\n\nconst onAddCart=(cartItems,product)=>{  \n  props.addToCart(cartItems, product);\n  props.addTotalCost(product.price);\n\n}\n\n  return (\n    <div>\n     <div className=\"col-12\">\n       <div className=\"row\">\n         <div className=\"col-8\">\n           <div className=\"row\">\n              <ProductItem productLists={props.items} onProductCLick={onAddCart} cartItems={props.cartItems}/>\n           </div>\n         </div>\n         {\n           props.cartItems.length>0 && \n           (\n            <div className=\"col-4\">\n              <CartComponent cartList={props.cartItems} cartTotalCost={props.totalCost}/>\n          </div>\n           )\n         }\n         \n      </div>\n      </div>\n     \n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n\n  return {\n    items: state.productReducer.items.map((item,i)=>{\n      item.count=0;\n      item.price=Math.round(item.price);\n      return item;\n    }),\n    cartItems:state.productReducer.cartItems,\n    totalCost:state.productReducer.totalCost\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getProducts: () => dispatch(getProducts()),\n    addToCart: (items,product) => dispatch(addToCart(items,product)),\n    addTotalCost: (num) => dispatch(addTotalCost(num))\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(LandingPage);\n\n"],"sourceRoot":""}