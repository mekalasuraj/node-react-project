{"version":3,"sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","components/students/register.js"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","Register","props","useState","name","email","password","curr_strd","formData","setFormData","inputData","setInputData","onSTudentsDetailsCahnge","e","data","target","count","parseInt","value","id","uuidv4","standard","remark","percentage","onDynamicInputChange","event","newInputFields","map","className","onSubmit","preventDefault","axios","post","prevData","then","response","message","window","location","href","htmlFor","type","onChange","required","pattern","title","min","max","item","placeholder","style","textDecoration"],"mappings":"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","file":"static/js/8.e3e6ed61.chunk.js","sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React, {useState} from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst Register = (props) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        curr_strd: ''\n      });\n    \n    const [inputData,setInputData]= useState([]); \n\n\n    const onSTudentsDetailsCahnge=(e)=>{\n      \n        let data=[];\n        if(e.target.name === 'curr_strd'){\n            let count =parseInt(e.target.value);\n           \n            for(let i=0;i< count-1;i++){\n                \n                data.push({id:uuidv4(),standard:'',remark:'',percentage:''});\n            }\n            setInputData(data);\n        }\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    }\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n       \n       axios.post('/api/users/add/student',{\n           formData,\n           prevData:inputData\n        })\n       .then(response=>{\n          \n           if(response.data.message === \"Successfully_Inserted\"){\n               window.location.href='/login'\n               \n           }\n       })\n      };\n\n      const onDynamicInputChange=(id,event)=>{\n        setInputData({ ...inputData, [event.target.name]: event.target.value });\n        const newInputFields = inputData.map(i => {\n            if(id === i.id) {\n              i[event.target.name] = event.target.value\n            }\n            return i;\n          })\n          \n          setInputData(newInputFields);\n    }\n\n  return (\n    <div>\n     \n     <div className=\"col-12\">\n         <div className=\"row\">\n             <div className=\"col-4\"></div>\n             <div className=\"col-4\">\n                 <h3 className=\"text-center mt-5 mb-5\">Register</h3>\n             <form onSubmit={onFormSubmit}>\n                    <div className=\"form-outline\">\n                    <label className=\"form-label\" htmlFor=\"formControlLg\">Name</label>\n                        <input type=\"text\" id=\"formControlLg\" name=\"name\" value={formData.name} onChange={onSTudentsDetailsCahnge} className=\"form-control form-control-lg\" required/>\n                       \n                    </div>\n\n                    <div className=\"form-outline\">\n                    <label className=\"form-label\" htmlFor=\"typeEmail\">Email</label>\n                        <input type=\"email\" id=\"typeEmail\" name=\"email\" value={formData.email} onChange={onSTudentsDetailsCahnge} className=\"form-control\" required/>\n                        \n                    </div>\n\n                    <div className=\"form-outline\">\n                    <label className=\"form-label\" htmlFor=\"typePassword\">Password</label>\n                        <input type=\"password\" pattern=\".{5,}\" title=\"5 characters minimum\" id=\"typePassword\" name=\"password\" value={formData.password} onChange={onSTudentsDetailsCahnge} className=\"form-control\" required/>\n                        \n                    </div>\n\n                    <div className=\"form-outline mb-4\">\n                    <label className=\"form-label\" htmlFor=\"typePhone\">Current Standard</label>\n                <input type=\"number\" id=\"typePhone\" name=\"curr_strd\" value={formData.curr_strd} onChange={onSTudentsDetailsCahnge} className=\"form-control\" min=\"1\" max=\"10\" required/>\n            \n                </div>\n            \n                <div className=\"form-outline mb-4\">\n                    {/* {renderInputs(formData.curr_strd)} */}\n\n                    {\n                        inputData.length<= 10 &&\n                        (\n                            inputData.map((item,i)=>(\n                                <div className=\"row mb-3\" key={item.id}>\n                      <div className=\"col-4\">\n                      <input type=\"text\" id=\"formControlLg1\" name='standard' onChange={event => onDynamicInputChange(item.id, event)} className=\"form-control form-control-lg\" placeholder=\"standard\" required/>\n                      </div>\n                      <div className=\"col-4\">\n                      <input type=\"text\" id=\"formControlLg2\" name='remark' onChange={event => onDynamicInputChange(item.id, event)} className=\"form-control form-control-lg\" placeholder='remark' required/>\n                      </div>\n                      <div className=\"col-4\">\n                      <input type=\"text\" id=\"formControlLg3\" name='percentage' onChange={event => onDynamicInputChange(item.id, event)} className=\"form-control form-control-lg\" placeholder='percentage' required/>\n                      </div>\n                  </div>\n                        )    \n                        ))\n                    }\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary btn-block mb-3\" >Sign Up</button>\n            </form>\n            <a href='/login' className=\"mt-3\" style={{textDecoration:'underline'}}>Login</a>\n             </div>\n             <div className=\"col-4\"></div>\n         </div>\n     \n     </div>\n     \n    </div>\n  );\n};\n\n\n\nexport default Register;\n\n"],"sourceRoot":""}