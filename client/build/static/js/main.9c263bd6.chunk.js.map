{"version":3,"sources":["actions/types.js","reducers/products.js","reducers/index.js","store.js","App.js","index.js"],"names":["GET_PRODUCTS","ADD_TO_CART","TOTAL_COST","GET_PRODUCT","initialState","items","cartItems","totalCost","productItem","productReducer","state","action","type","payload","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","getState","LandingComponent","React","lazy","ProductPage","App","Suspense","fallback","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"iGAAA,wIAAO,IAAMA,EAAe,eACfC,EAAc,cACdC,EAAa,aACbC,EAAc,e,qKCDrBC,EAAe,CAACC,MAAM,GAAGC,UAAU,GAAGC,UAAU,EAAEC,YAAY,IAoBrDC,MAlBf,WAAuD,IAA/BC,EAA8B,uDAAtBN,EAAcO,EAAQ,uCAE5CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAQD,GACN,KAAKZ,IACH,OAAO,2BAAIU,GAAX,IAAkBL,MAAMQ,IAC1B,KAAKZ,IACH,OAAO,2BAAKS,GAAZ,IAAmBJ,UAAWO,EAAQP,YACtC,KAAKJ,IACL,OAAO,2BAAKQ,GAAZ,IAAmBH,UAAUG,EAAMH,UAAUM,IAC7C,KAAKV,IACL,OAAO,2BAAIO,GAAX,IAAkBF,YAAYK,IAChC,QACE,OAAOH,ICdEI,4BAAgB,CAC7BL,mBCGIM,EAAa,CAACC,KAEdC,EAAQC,sBACZC,EALmB,GAOnBC,8BAAoBC,kBAAe,WAAf,EAAmBN,KAqB1BE,GAbIA,EAAMK,WAaVL,GCrBTM,G,MAAmBC,IAAMC,MAAK,kBAAM,uDACpCC,EAAcF,IAAMC,MAAK,kBAAM,sDAoBtBE,EAfH,WAGV,OACG,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACC,cAAC,IAAD,UACE,eAAC,IAAMW,SAAP,CAAgBC,SAAU,6CAA1B,UACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWT,IACjC,cAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,eAAeC,UAAWN,YCvBxDO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9c263bd6.chunk.js","sourcesContent":["export const GET_PRODUCTS = 'GET_PRODUCTS';\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const TOTAL_COST = 'TOTAL_COST';\nexport const GET_PRODUCT = 'GET_PRODUCT';\n\n","import { GET_PRODUCTS ,ADD_TO_CART,TOTAL_COST,GET_PRODUCT} from '../actions/types';\n\nconst initialState = {items:[],cartItems:[],totalCost:0,productItem:{}};\n\nfunction productReducer(state = initialState, action) {\n    \n  const { type, payload } = action;\n \n  switch (type) {\n    case GET_PRODUCTS:\n      return {...state, items:payload};\n    case ADD_TO_CART:\n      return { ...state, cartItems: payload.cartItems };\n      case TOTAL_COST:\n      return { ...state, totalCost:state.totalCost+payload };  \n      case GET_PRODUCT:\n      return {...state, productItem:payload};\n    default:\n      return state;\n  }\n}\n\nexport default productReducer;","import { combineReducers } from 'redux';\nimport productReducer from './products';\n\n\nexport default combineReducers({\n  productReducer\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\n// set up a store subscription listener\n// to store the users token in localStorage\n\n// initialize current state from redux store for subscription comparison\n// preventing undefined error\nlet currentState = store.getState();\n\n// store.subscribe(() => {\n//   // keep track of the previous and current state to compare changes\n//   let previousState = currentState;\n//   currentState = store.getState();\n//   // if the token changes set the value in localStorage and axios headers\n//   if (previousState.auth.token !== currentState.auth.token) {\n//     const token = currentState.auth.token;\n//     setAuthToken(token);\n//   }\n// });\n\nexport default store;\n","import React, { Fragment} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n//import Landing from './components/Landing';\n//import ProductPage from './components/productPage';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\nimport './App.css';\n\nconst LandingComponent = React.lazy(() => import('./components/Landing'));\nconst ProductPage = React.lazy(() => import('./components/productPage'));\n\n// const LazyLandingComponent = React.lazy(() => import('./components/Landing'))\n// const LazyProductPage= React.lazy(() => import('./components/productItem'))\n\nconst App = () => {\n  \n\n  return (\n     <Provider store={store}>\n      <Router>\n        <React.Suspense fallback={<div>Loading...</div>}>\n            <Route exact path=\"/\" component={LandingComponent} />\n            <Route exact path=\"/product/:id\" component={ProductPage} />\n        </React.Suspense>\n      </Router>\n      </Provider> \n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}