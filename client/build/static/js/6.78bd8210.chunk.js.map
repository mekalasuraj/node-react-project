{"version":3,"sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","components/students/register.js","../../lib/atob.js","../../lib/base64_url_decode.js","../../lib/index.js"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","Register","props","useState","name","email","password","curr_strd","formData","setFormData","inputData","setInputData","onSTudentsDetailsCahnge","e","data","target","count","parseInt","value","id","uuidv4","standard","remark","percentage","onDynamicInputChange","event","newInputFields","map","className","onSubmit","preventDefault","axios","post","prevData","then","response","message","decoded","jwt_decode","token","sessionStorage","setItem","JSON","window","location","href","htmlFor","type","onChange","required","pattern","title","min","max","item","placeholder","style","textDecoration","InvalidCharacterError","this","prototype","atob","input","str","String","replace","bs","buffer","bc","idx","output","charAt","fromCharCode","indexOf","decodeURIComponent","m","p","code","charCodeAt","toUpperCase","err","InvalidTokenError","pos","header","parse","base64_url_decode","split"],"mappings":"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","file":"static/js/6.78bd8210.chunk.js","sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React, {useState} from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport jwt_decode from \"jwt-decode\";\n\nconst Register = (props) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        curr_strd: ''\n      });\n    \n    const [inputData,setInputData]= useState([]); \n\n\n    const onSTudentsDetailsCahnge=(e)=>{\n      \n        let data=[];\n        if(e.target.name === 'curr_strd'){\n            let count =parseInt(e.target.value);\n           \n            for(let i=0;i< count-1;i++){\n                \n                data.push({id:uuidv4(),standard:'',remark:'',percentage:''});\n            }\n            setInputData(data);\n        }\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    }\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n       \n       axios.post('/api/users/add/student',{\n           formData,\n           prevData:inputData\n        })\n       .then(response=>{\n       \n            \n           if(response.data.message === \"Successfully_Inserted\"){\n              \n               var decoded = jwt_decode(response.data.token);\n               sessionStorage.setItem('user',JSON.stringify(decoded))\n               sessionStorage.setItem('token',response.data.token)\n               window.location.href='/dashboard';\n           }\n       })\n      };\n\n      const onDynamicInputChange=(id,event)=>{\n        setInputData({ ...inputData, [event.target.name]: event.target.value });\n        const newInputFields = inputData.map(i => {\n            if(id === i.id) {\n              i[event.target.name] = event.target.value\n            }\n            return i;\n          })\n          \n          setInputData(newInputFields);\n    }\n\n  return (\n    <div>\n     \n     <div className=\"col-12\">\n         <div className=\"row\">\n             <div className=\"col-4\"></div>\n             <div className=\"col-4\">\n                 <h3 className=\"text-center mt-5 mb-5\">Register</h3>\n             <form onSubmit={onFormSubmit}>\n                    <div className=\"form-outline\">\n                    <label className=\"form-label\" htmlFor=\"formControlLg\">Name</label>\n                        <input type=\"text\" id=\"formControlLg\" name=\"name\" value={formData.name} onChange={onSTudentsDetailsCahnge} className=\"form-control form-control-lg\" required/>\n                       \n                    </div>\n\n                    <div className=\"form-outline\">\n                    <label className=\"form-label\" htmlFor=\"typeEmail\">Email</label>\n                        <input type=\"email\" id=\"typeEmail\" name=\"email\" value={formData.email} onChange={onSTudentsDetailsCahnge} className=\"form-control\" required/>\n                        \n                    </div>\n\n                    <div className=\"form-outline\">\n                    <label className=\"form-label\" htmlFor=\"typePassword\">Password</label>\n                        <input type=\"password\" pattern=\".{5,}\" title=\"5 characters minimum\" id=\"typePassword\" name=\"password\" value={formData.password} onChange={onSTudentsDetailsCahnge} className=\"form-control\" required/>\n                        \n                    </div>\n\n                    <div className=\"form-outline mb-4\">\n                    <label className=\"form-label\" htmlFor=\"typePhone\">Current Standard</label>\n                <input type=\"number\" id=\"typePhone\" name=\"curr_strd\" value={formData.curr_strd} onChange={onSTudentsDetailsCahnge} className=\"form-control\" min=\"1\" max=\"10\" required/>\n            \n                </div>\n            \n                <div className=\"form-outline mb-4\">\n                    {/* {renderInputs(formData.curr_strd)} */}\n\n                    {\n                        inputData.length<= 10 &&\n                        (\n                            inputData.map((item,i)=>(\n                                <div className=\"row mb-3\" key={item.id}>\n                      <div className=\"col-4\">\n                      <input type=\"text\" id=\"formControlLg1\" name='standard' onChange={event => onDynamicInputChange(item.id, event)} className=\"form-control form-control-lg\" placeholder=\"standard\" required/>\n                      </div>\n                      <div className=\"col-4\">\n                      <input type=\"text\" id=\"formControlLg2\" name='remark' onChange={event => onDynamicInputChange(item.id, event)} className=\"form-control form-control-lg\" placeholder='remark' required/>\n                      </div>\n                      <div className=\"col-4\">\n                      <input type=\"text\" id=\"formControlLg3\" name='percentage' onChange={event => onDynamicInputChange(item.id, event)} className=\"form-control form-control-lg\" placeholder='percentage' required/>\n                      </div>\n                  </div>\n                        )    \n                        ))\n                    }\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary btn-block mb-3\" >Sign Up</button>\n            </form>\n            <a href='/login' className=\"mt-3\" style={{textDecoration:'underline'}}>Login</a>\n             </div>\n             <div className=\"col-4\"></div>\n         </div>\n     \n     </div>\n     \n    </div>\n  );\n};\n\n\n\nexport default Register;\n\n","/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}"],"sourceRoot":""}